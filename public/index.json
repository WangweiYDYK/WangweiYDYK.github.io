[{"categories":null,"content":"抽象代数 ","date":"2024-02-26","objectID":"/basic_concepts/:0:0","tags":null,"title":"Abstract Algebra","uri":"/basic_concepts/"},{"categories":null,"content":"1.1 群 满足四个性质： 封闭性：对于任意的$a,b\\in G$，都有$a\\circ b\\in G$。 结合律：对于任意的$a,b,c\\in G$，都有$(a\\circ b)\\circ c=a\\circ(b\\circ c)$。 幺元：存在一个元素$e\\in G$，使得对于任意的$a\\in G$，都有$e\\circ a=a\\circ e=a$。 逆元：对于任意的$a\\in G$，都存在一个元素$b\\in G$，使得$a\\circ b=b\\circ a=e$。 可以看到群并没有要求交换律。如果群内任意元素均满足$a\\circ b=b\\circ a$，则称该群为阿贝尔群。 半群： 满足封闭性和结合律，但不满足幺元和逆元。 ","date":"2024-02-26","objectID":"/basic_concepts/:1:0","tags":null,"title":"Abstract Algebra","uri":"/basic_concepts/"},{"categories":null,"content":"1.2 群的同构和同态 同构： 若群$G$和$H$之间存在一个双射$\\varphi:G\\to H$,使得$f(a)=A$和$f(b)=B$，则有$f(a\\circ b)=f(a)\\ast f(b)$。 例：群$G(\\mathbb{Z}/4\\mathbb{Z},+)$和群$H(\\left\\{1,i,-1,-i\\right\\},\\times)$同构。 同态： 给定两个群$(G,\\circ)$和$(H,\\ast)$，如果存在一个映射$\\varphi:G\\to H$，使得对于任意的$a,b\\in G$，都有$\\varphi(a\\circ b)=\\varphi(a)\\ast\\varphi(b)$，那么称$\\varphi$是一个群的同态。因此可以说，同构是满足双射的同态 例1：$f(x)=x^2$是一个从实数到非负实数的同态。 例2：C3循环群和S3交换群同态，C3循环群和C6循环群同态 ","date":"2024-02-26","objectID":"/basic_concepts/:2:0","tags":null,"title":"Abstract Algebra","uri":"/basic_concepts/"},{"categories":null,"content":"1.3 常见群 交换群 循环群 常见矩阵群： 一般线性群$GL(n)$: 特殊正交群$SO(n)$:$SO(n) = {A \\in GL(n) | AAT = I, det(\\mathbf(R)) = 1}$ 特殊欧式群$SE(n)$: 特殊射影群$SP(n)$ ","date":"2024-02-26","objectID":"/basic_concepts/:3:0","tags":null,"title":"Abstract Algebra","uri":"/basic_concepts/"},{"categories":null,"content":"环 2.1 环的定义 如果一个非空集合$R$上定义了两个二元运算$+$和$\\times$，分别称为加法和乘法，满足： （1）$(R,+)$是阿贝尔群 （2）$(R,\\times)$是半群 （3）乘法对于加法满足左分配律、右分配律，则称$R$ 关于运算$\\times$，$+$构成一个环（ring），记为$(R,+,\\times)$ ","date":"2024-02-26","objectID":"/basic_concepts/:4:0","tags":null,"title":"Abstract Algebra","uri":"/basic_concepts/"},{"categories":null,"content":"域 ","date":"2024-02-26","objectID":"/basic_concepts/:5:0","tags":null,"title":"Abstract Algebra","uri":"/basic_concepts/"},{"categories":null,"content":"李群 李群指具有群结构的光滑微分流形，在物理上描述的是连续的对称性 例： 对于模为1的复数集合，其可以表示为$e^{i\\theta}$，显然该集合对于乘法封闭，满足群的四个基本要求，所以说其具有群结构。 相对应的这个集合可以在复平面上绘制成一个圆，此时，圆上的任意一点，都可以用赋予其的值$\\theta$表示其坐标，其等价于一个一维流形，且其上的乘法运算是光滑的，因此这个集合是一个李群 李代数：李群上的切空间。描述了李群的局部性质李代数由一个集合$V$，一个数域$F$ 和一个二元运算 $[,]$ 组成。如果它们满足以下几条性质，称 (V; F; [, ]) 为一个李代数，记作 g。 封闭性: $\\forall \\mathbf{X}, \\mathbf{Y} \\in V,[\\mathbf{X}, \\mathbf{Y}] \\in V$ 双线性: $\\forall \\mathbf{X}, \\mathbf{Y}, \\mathbf{Z} \\in V, a, b \\in F$ ，有$[a \\mathbf{X}+b \\mathbf{Y}, \\mathbf{Z}]=a[\\mathbf{X}, \\mathbf{Z}]+[\\mathbf{Y}, \\mathbf{Z}],[\\mathbf{Z}, a \\mathbf{X}+b \\mathbf{Y}]=a[\\mathbf{Z}, \\mathbf{X}]+b[\\mathbf{Z}, \\mathbf{Y}]$ 自反性: $\\forall \\mathbf{X} \\in V,[\\mathbf{X}, \\mathbf{X}]=\\mathbf{0}$ 雅可比等价: $\\forall \\mathbf{X}, \\mathbf{Y}, \\mathbf{Z} \\in V,[\\mathbf{X},[\\mathbf{Y}, \\mathbf{Z}]]+[\\mathbf{Z},[\\mathbf{X}, \\mathbf{Y}]]+[\\mathbf{Y},[\\mathbf{Z}, \\mathbf{X}]]=\\mathbf{0}$ 其中的二元运算称为李括号，他表示了两个元素之间的差异，在$R^3$空间中上定义的叉积就是一种李括号，此时$g=(R^3,R,\\times)$构成了李代数 指数映射：将切空间上的切向量映射到流形上点的动作 对数映射：将流形上的点映射到切空间的切向量上 ","date":"2024-02-26","objectID":"/lie_group/:0:0","tags":null,"title":"Lie Group","uri":"/lie_group/"},{"categories":null,"content":"李代数 ","date":"2024-02-26","objectID":"/lie_group/:1:0","tags":null,"title":"Lie Group","uri":"/lie_group/"},{"categories":null,"content":"生成子 ","date":"2024-02-26","objectID":"/lie_group/:2:0","tags":null,"title":"Lie Group","uri":"/lie_group/"},{"categories":null,"content":"O(2) ","date":"2024-02-26","objectID":"/lie_group/:3:0","tags":null,"title":"Lie Group","uri":"/lie_group/"},{"categories":null,"content":"SO(2) ","date":"2024-02-26","objectID":"/lie_group/:4:0","tags":null,"title":"Lie Group","uri":"/lie_group/"},{"categories":null,"content":"SU(2) 对于单位四元数$a+bi+cj+dk$ 其左乘矩阵形式等价于$\\left[\\begin{array}{ccc}a \u0026 -b \u0026 -c \u0026 -d \\\\ b \u0026 a \u0026 -d \u0026 c \\\\ c \u0026 d \u0026 a \u0026 -b \\\\ d \u0026 -c \u0026 -b \u0026 -a\\end{array}\\right]$，右乘矩阵等价为$\\left[\\begin{array}{ccc}a \u0026 -b \u0026 -c \u0026 -d \\\\ b \u0026 a \u0026 d \u0026 -c \\\\ c \u0026 -d \u0026 a \u0026 b \\\\ d \u0026 c \u0026 -b \u0026 a\\end{array}\\right]$，以右乘矩阵为例，其每个子矩阵代表了一个复数，如果将其改写为复数矩阵，形式为$\\left[\\begin{array}{ccc}a+bi \u0026 -c+di\\\\ c + di \u0026 a-bi\\end{array}\\right]$此时，该矩阵为酉矩阵。且对于单位四元数，该矩阵的特征值为1。 $\\operatorname{SU}(2)$群是一个矩阵群，群元素为$2\\times2$的幺正矩阵，且行列式为1 ","date":"2024-02-26","objectID":"/lie_group/:5:0","tags":null,"title":"Lie Group","uri":"/lie_group/"},{"categories":null,"content":"SO(3) 对于旋转，它只有三个自由度，但是使用旋转矩阵就会有9个量，显然使用旋转矩阵表达旋转是冗余的，理论上可以用3个量来表示旋转. $\\operatorname{SO}(3)$ 群是一个常见的李群，若将$\\operatorname{SO}(3)$群视为全体三维空间中，顺时针转动任意角度的集合，有： $$\\operatorname{SO}(3) \\equiv \\left\\{\\begin{array}{l|l} \\mathcal{R}(\\vec{\\omega}) \u0026 \\begin{array}{l} \\vec{\\omega}=\\omega \\vec{n}, \\vec{n}=(\\cos \\varphi \\sin \\theta, \\sin \\varphi \\sin \\theta, \\cos \\theta) \\\\ \\omega \\in[0, \\pi], \\theta \\in[0, \\pi], \\varphi \\in[0,2 \\pi] \\end{array} \\end{array}\\right\\}$$ 在式$\\vec{\\omega}=\\omega \\vec{n}$中，$\\vec{n}$是旋转轴，模长为1，$\\omega$是绕$\\vec{n}$旋转的角度。 $\\mathcal{R}(\\vec{\\omega})$表示绕$\\vec{\\omega}$轴旋转$\\omega$角度的操作。 因此，我们可以将$\\operatorname{SO}(3)$群视作由$\\vec{\\omega}$端点构成的半径为$\\pi$的实心球 ","date":"2024-02-26","objectID":"/lie_group/:6:0","tags":null,"title":"Lie Group","uri":"/lie_group/"},{"categories":null,"content":"从SO(3)群推导罗德里格斯公式 对于三维旋转群$\\operatorname{SO}(3)$，其集合内元素满足 $$\\det R=1$$ $$R^TR=I$$ 若考虑其为时间$t$的函数，则有$\\mathbf{R}(t)^T\\mathbf{R}(t)=\\mathbf{I}$。对其求导，有 $$\\dot{\\mathbf{R}}(t) \\mathbf{R}(t)^T+\\mathbf{R}(t) \\dot{\\mathbf{R}}(t)^T=0$$ $$\\dot{\\mathbf{R}}(t) \\mathbf{R}(t)^T=-\\mathbf{R}(t) \\dot{\\mathbf{R}}(t)^T$$ 不难发现，$\\mathbf{R}(t) \\dot{\\mathbf{R}}(t)^T$是一个反对称矩阵。因此，我们可以将其记作${\\mathbf{A}}$，对于这个$3\\times 3$反对称矩阵，其对角线元素为0，因此其只有三个自由度，可以将其对应于三维向量$\\mathbf{a} = [a_1, a_2, a_3]^T$，因此对于矩阵A我们可以将其表示为： $$\\mathbf{a}^{\\wedge} = \\mathbf{A}=\\begin{bmatrix} 0 \u0026 -a_3 \u0026 a_2 \\\\ a_3 \u0026 0 \u0026 -a_1 \\\\ -a_2 \u0026 a_1 \u0026 0 \\end{bmatrix}$$ 其中$\\mathbf{a}^{\\wedge}$表示$\\mathbf{a}$所对应的反对称矩阵。因此我们使用$\\phi(t)^{\\wedge}$对应$\\dot{\\mathbf{R}}(t) \\mathbf{R}(t)^T$,即： $$\\dot{\\mathbf{R}}(t) \\mathbf{R}(t)^T=\\phi(t)^{\\wedge}$$ 此时，$$\\dot{\\mathbf{R}}(t)=\\phi(t)^{\\wedge} \\mathbf{R}(t)=\\left[\\begin{array}{ccc}0 \u0026 -\\phi_3 \u0026 \\phi_2 \\\\ \\phi_3 \u0026 0 \u0026 -\\phi_1 \\\\ -\\phi_2 \u0026 \\phi_1 \u0026 0\\end{array}\\right] \\mathbf{R}(t)$$ 不难发现其对应于关于$\\mathbf{R}$的微分方程： $$\\mathbf{R}(t)=\\exp \\left(\\phi(t)^{\\wedge}\\right) \\mathbf{R}\\left(t_0\\right)$$ 任意矩阵的指数映射可以使用泰勒展开进行近似，对于$\\exp \\left(\\phi(t)^{\\wedge}\\right)$，我们可以使用泰勒展开进行近似： $$\\exp \\left(\\phi(t)^{\\wedge}\\right)=\\mathbf{I}+\\phi(t)^{\\wedge}+\\frac{\\left(\\phi(t)^{\\wedge}\\right)^2}{2 !}+\\frac{\\left(\\phi(t)^{\\wedge}\\right)^3}{3 !}+\\cdots$$ 对于三维向量$\\phi$，可以使用,假设其模长为$\\theta$,方向为$a$，即$\\phi=\\theta {a}$，因此$\\phi^{\\wedge}=\\theta {a}^{\\wedge}$。 且有两个性质： $$ \\begin{aligned} \u0026 a^{\\wedge} a^{\\wedge}=a a^T-I \\\\ \u0026 a^{\\wedge} a^{\\wedge} a^{\\wedge}=-a^{\\wedge} \\end{aligned} $$ 因此上式可展开为： $$ \\begin{aligned} \u0026 \\mathbf{R}=\\exp \\left(\\phi^{\\wedge}\\right)=\\exp \\left(\\theta a^{\\wedge}\\right)=\\sum_{n=0}^{\\infty} \\frac{1}{n !}\\left(\\theta a^{\\wedge}\\right)^n \\\\ \u0026 =I+\\theta a^{\\wedge}+\\frac{1}{2 !} \\theta^2 a^{\\wedge} a^{\\wedge}+\\frac{1}{3 !} \\theta^3 a^{\\wedge} a^{\\wedge} a^{\\wedge}+\\frac{1}{4 !} \\theta^4\\left(a^{\\wedge}\\right)^4+\\ldots \\\\ \u0026 =a a^T-a^{\\wedge} a^{\\wedge}+\\theta a^{\\wedge}+\\frac{1}{2 !} \\theta^2 a^{\\wedge} a^{\\wedge}-\\frac{1}{3 !} \\theta^3 a^{\\wedge}-\\frac{1}{4 !} \\theta^3\\left(a^{\\wedge}\\right)^2+\\ldots \\\\ \u0026 =a a^T+\\left(\\theta-\\frac{1}{3 !} \\theta^3+\\frac{1}{5 !} \\theta^5-\\ldots\\right) a^{\\wedge}-\\left(1-\\frac{1}{2 !} \\theta^2+\\frac{1}{4 !} \\theta^4-\\ldots\\right) a^{\\wedge} a^{\\wedge} \\\\ \u0026 =a^{\\wedge} a^{\\wedge}+I \\sin \\theta a^{\\wedge}-\\cos \\theta a^{\\wedge} a^{\\wedge} \\\\ \u0026 =(1-\\cos \\theta) a^{\\wedge} a^{\\wedge}+I+\\sin \\theta a^{\\wedge} \\\\ \u0026 =\\cos \\theta I+(1-\\cos \\theta) a a^T+\\sin \\theta a^{\\wedge} \\end{aligned} $$ $\\operatorname{SO}(3)$李代数：物理意义为旋转向量 $$ \\mathfrak{so}(3)=\\left\\{\\phi \\in \\mathbb{R}^3, \\boldsymbol{\\Phi}=\\boldsymbol{\\phi}^{\\wedge} \\in \\mathbb{R}^{3 \\times 3}\\right\\} . $$ 四元数插值 Nlerp Slerp $\\operatorname{SU}(2)$ ","date":"2024-02-26","objectID":"/lie_group/:7:0","tags":null,"title":"Lie Group","uri":"/lie_group/"},{"categories":null,"content":"SE(3) $\\operatorname{SE(3)}$群是一个六维李群，它是三维旋转群$\\operatorname{SO(3)}$和三维平移群$\\mathbb{R}^3$的直积，即： $$\\begin{equation} \\operatorname{SE(3)}= \\left\\{\\left[\\begin{array}{ccc}\\mathbf{R} \u0026 \\mathbf{P} \\\\ \\mathbf{0} \u0026 1\\end{array}\\right]\\mathbf{P} \\in \\mathbb{R}^3, \\mathbf{R} \\in \\operatorname{SO(3)} \\right\\} \\end{equation}$$ 作为矩阵李群，$\\operatorname{SE(3)}$代表一种齐次坐标变换，可以代表某种刚体运动的集合 对偶四元数插值： $$ \\operatorname{DQLERP}\\left(Q_0, Q_1, t\\right):=\\frac{Q_0+t\\left(Q_1-Q_0\\right)}{\\left||Q_0+t\\left(Q_1-Q_0\\right)|\\right|} $$ $\\operatorname{ScLERP}$插值，SE(3)中Q0到Q1的测地线 ","date":"2024-02-26","objectID":"/lie_group/:8:0","tags":null,"title":"Lie Group","uri":"/lie_group/"},{"categories":null,"content":"基于热的测地线距离以及向量平行传输 ","date":"2023-10-08","objectID":"/heatmethod/:0:0","tags":null,"title":"Heat Method for Geodesic","uri":"/heatmethod/"},{"categories":null,"content":"heat method $\\phi(x,y) = \\lim _{t \\rightarrow 0} \\sqrt{-4t \\log {k_t}(x,y)} $ 当热核函数存在误差的时候，直接使用Varadhan公式会有非常显著的误差。 ","date":"2023-10-08","objectID":"/heatmethod/:1:0","tags":null,"title":"Heat Method for Geodesic","uri":"/heatmethod/"},{"categories":null,"content":"Alg 在曲面上给定一点x上施加一个热源，并对其进行扩散获得温度场 1.$\\frac{d}{dt}u = \\Delta u$ 取u为顶点坐标的函数，代入热传导方程并离散化后有$\\frac{u^{k+1} - u^k}{h} = Lu^k$,隐式迭代下为$(I-tL)u^{k+1} = u^k$。此时，$u_0$代表 可以使用Cholesky分解或者Krylov子空间分解，在论文中，t的选取一般取平均边长的平方 2.$X = -\\frac{\\nabla u}{|\\nabla u|}$ 对温度场的梯度进行归一化后得到距离场扩散的向量场X 3.求解$\\Delta u = \\nabla \\cdot X$ 对于已知向量场X，如果希望寻找一个势场u使得u可以表示X，则可以构造迪利克雷能量 $E(u)=\\int_{M}|\\nabla u-X|^{2} d A$。 而最小化迪利克雷能量等价于求解泊松方程$\\Delta u = \\nabla \\cdot X$ /* Constructor * Input: The surface mesh \u003cinputMesh\u003e and geometry \u003cinputGeo\u003e. */ HeatMethod::HeatMethod(ManifoldSurfaceMesh* surfaceMesh, VertexPositionGeometry* geo) { this-\u003emesh = surfaceMesh; this-\u003egeometry = geo; // TODO: Build Laplace and flow matrices. double h = this-\u003egeometry-\u003emeanEdgeLength(); int N = mesh-\u003enVertices(); SparseMatrix\u003cdouble\u003e M = geometry-\u003emassMatrix(); // Note: core/geometry.cpp has meanEdgeLength() function this-\u003eA = geometry-\u003elaplaceMatrix(); this-\u003eF = M + h * h * A; } /* * Computes the vector field X = -∇u / |∇u|. * * Input: \u003cu\u003e, a dense vector representing the heat that is allowed to diffuse on the input mesh for a brief period of * time. * Returns: A MeshData container that stores a Vector3 per face. */ FaceData\u003cVector3\u003e HeatMethod::computeVectorField(const Vector\u003cdouble\u003e\u0026 u) const { FaceData\u003cVector3\u003e vf(*mesh, {0, 0, 0}); for (Face f : mesh-\u003efaces()) { Vector3 grad{0, 0, 0}; Vector3 normal = geometry-\u003efaceNormal(f); for (Halfedge he : f.adjacentHalfedges()) { Vector3 ePerp = geometry-\u003einputVertexPositions[he.next().tipVertex()] - geometry-\u003einputVertexPositions[he.next().tailVertex()]; ePerp = ePerp.rotateAround(normal, M_PI / 2); grad += ePerp * u[he.vertex().getIndex()]; } vf[f.getIndex()] = -grad.normalizeCutoff(); } return vf; } /* * Computes the integrated divergence ∇.X. * * Input: \u003cX\u003e, the vector field -∇u / |∇u| represented as a FaceData container * Returns: A dense vector */ Vector\u003cdouble\u003e HeatMethod::computeDivergence(const FaceData\u003cVector3\u003e\u0026 X) const { Vector\u003cdouble\u003e div = Vector\u003cdouble\u003e::Zero(mesh-\u003enVertices()); for (Face f : mesh-\u003efaces()) { Vector3 Xj = X[f.getIndex()]; for (Halfedge he : f.adjacentHalfedges()) { Vector3 e = geometry-\u003einputVertexPositions[he.tipVertex()] - geometry-\u003einputVertexPositions[he.tailVertex()]; double val = 0.5 * geometry-\u003ecotan(he) * dot(e, Xj); div[he.tailVertex().getIndex()] += val; div[he.tipVertex().getIndex()] += -val; } } return div; // placeholder } /* * Computes the geodesic distances φ using the heat method. * * Input: \u003cdelta\u003e, a dense vector representing the heat sources, i.e., u0 = δ(x). Returns: A dense vector containing the * geodesic distances per vertex. */ Vector\u003cdouble\u003e HeatMethod::compute(const Vector\u003cdouble\u003e\u0026 delta) const { Eigen::SimplicialLLT\u003cSparseMatrix\u003cdouble\u003e\u003e llt(F); Vector\u003cdouble\u003e u = llt.solve(delta); FaceData\u003cVector3\u003e X = computeVectorField(u); Vector\u003cdouble\u003e deltaPhi = computeDivergence(X); SparseMatrix\u003cdouble\u003e A = this-\u003eA; geometrycentral::PositiveDefiniteSolver\u003cdouble\u003e solver(A); Vector\u003cdouble\u003e phi = solver.solve(-deltaPhi); // Since φ is unique up to an additive constant, it should be shifted such that the smallest distance is zero this-\u003esubtractMinimumDistance(phi); return phi; } ","date":"2023-10-08","objectID":"/heatmethod/:1:1","tags":null,"title":"Heat Method for Geodesic","uri":"/heatmethod/"},{"categories":null,"content":"cotLaplacain推导 (https://zhuanlan.zhihu.com/p/372670140) ","date":"2023-10-08","objectID":"/heatmethod/:1:2","tags":null,"title":"Heat Method for Geodesic","uri":"/heatmethod/"},{"categories":null,"content":"处理点云模型或者多边形模型 ","date":"2023-10-08","objectID":"/heatmethod/:1:3","tags":null,"title":"Heat Method for Geodesic","uri":"/heatmethod/"},{"categories":null,"content":"距离光顺 ","date":"2023-10-08","objectID":"/heatmethod/:1:4","tags":null,"title":"Heat Method for Geodesic","uri":"/heatmethod/"},{"categories":null,"content":"边界条件处理 1.迪利克雷条件 若泊松方程只存在迪利克雷边界，则只需将网格边界和内部分开来考虑即可 $$\\left[\\begin{array}{ll} L_{I I} \u0026 L_{I B} \\\\ L_{B I} \u0026 L_{B B} \\end{array}\\right]\\left[\\begin{array}{l} u_I \\\\ u_B \\end{array}\\right]=\\left[\\begin{array}{cc} M_I \u0026 0 \\\\ 0 \u0026 M_B \\end{array}\\right]\\left[\\begin{array}{l} f_I \\\\ f_B \\end{array}\\right]$$ 2.纽曼条件 对于nuemann边界条件，$(\\Delta u)_i=\\frac{1}{2}\\left(g_a+g_b\\right)+\\frac{1}{2} \\sum_j\\left(\\cot \\alpha_j+\\cot \\beta_j\\right)\\left(u_j-u_i\\right)$ 其中$g_a$和$g_b$分别代表给定方向导数在边界上的积分。 泊松方程可以表示为 $$\\left[\\begin{array}{ll} L_{I I} \u0026 L_{I B} \\\\ L_{B I} \u0026 L_{B B} \\end{array}\\right]\\left[\\begin{array}{l} u_I \\\\ u_B \\end{array}\\right]=\\left[\\begin{array}{l} M_If_I \\\\ M_Bf_B-g \\end{array}\\right]$$ 此时按照无边界条件处理 对于HeatMethod，使用平均边界条件$u = (u_N + u_D)$ ","date":"2023-10-08","objectID":"/heatmethod/:1:5","tags":null,"title":"Heat Method for Geodesic","uri":"/heatmethod/"},{"categories":null,"content":"收敛性 ","date":"2023-10-08","objectID":"/heatmethod/:1:6","tags":null,"title":"Heat Method for Geodesic","uri":"/heatmethod/"},{"categories":null,"content":"基于机器学习 对于一个嵌在$R^m$中的$d$维黎曼流形 1.将$V^0$沿着整个流形通过heat flow的方式进行传播获得流形上的向量场$V_s$ $$\\min_{V} E(V) :=\\int_{\\mathcal{M}}\\left|V-V^{0}\\right|^{2} d x+t \\int_{\\mathcal{M}}|\\nabla V|_{\\mathrm{HS}}^{2} d x$$ 2.向量场$V$归一化 3.最小化$\\Phi(f)$ $$min_{f}\\Phi(f):=\\int_{\\mathcal{M}}|\\nabla f-\\hat{V}|^{2} d x$$ $${ s.t. } f(p)=0$$ ","date":"2023-10-08","objectID":"/heatmethod/:1:7","tags":null,"title":"Heat Method for Geodesic","uri":"/heatmethod/"},{"categories":null,"content":"heat method的并行 从热扩散方程中获得一个接近于单位向量场的可积分的梯度场，对该梯度场进行积分获得测地线距离 1.使用Gauss-Seidel迭代求解热扩散 $$u^{i}(v_j) = \\frac{u_{0}(v_{j})+t \\sum_{k\\in \\mathcal{N}_{j}} \\theta _{j,k} u^{i-1}(v _{k})}{A _{v_j} + t \\sum _{k\\in \\mathcal{N}(j)} \\theta _{j, k}} $$ 2.获得可积分向量场 在原Heat Method中通过最小化迪利克雷能量来获得一个标量场使其梯度近似于单位向量场$h_i$，而在并行时使用ADMM求解器求解一个凸优化问题从而获得一个可积分的向量场$g_i$ 凸优化问题 $$ \\min_{\\mathbf{g}_{i}} \\sum _{f_i \\in \\mathcal{F}} A_i\\left|\\mathbf{g}_i-\\mathbf{h}_i\\right|^{2} \\\\ \\text{s.t.} \\overline{\\mathbf{e}} \\cdot\\left(\\mathbf{g}_1^{e}-\\mathbf{g}_2^{e}\\right)=0 \\quad \\forall e \\in \\mathcal{E} _{\\text {int }} $$ 下式代表对于共边的两个面，他们面上的梯度向量和共同边的点积必定相等 3.对向量场$g_i$进行积分 $$d(v_j)=d(v_k) + \\frac{1}{\\left|\\mathcal{T}_ {j k}\\right|} \\sum_{f_l \\in \\mathcal{T}_ {j k}} \\mathbf{g}_ {l} \\cdot\\left(\\mathbf{p}_ j-\\mathbf{p}_ k\\right)$$ 多源最短路径 优点： Gauss-Seidel和ADMM都可以快速收敛 具有较低的内存占用，允许处理大网格 可并行性强 ","date":"2023-10-08","objectID":"/heatmethod/:1:8","tags":null,"title":"Heat Method for Geodesic","uri":"/heatmethod/"},{"categories":null,"content":"可优化的部分 用GMRES求解线性方程组 时间t的选取 加权距离计算 ","date":"2023-10-08","objectID":"/heatmethod/:1:9","tags":null,"title":"Heat Method for Geodesic","uri":"/heatmethod/"},{"categories":null,"content":"Vector Heat Method ","date":"2023-10-08","objectID":"/heatmethod/:2:0","tags":null,"title":"Heat Method for Geodesic","uri":"/heatmethod/"},{"categories":null,"content":"Scalar Interpolation 使用高斯核插值 $$ G_t(x, y):=\\frac{1}{(4 \\pi t)^{n / 2}} e^{-d(x, y)^2 / 4 t} $$ $$ \\bar{u}_ t=\\frac{u_1 G_{t, p_1}+u_2 G_{t, p_2}}{G_{t, p_1}+G_{t, p_2}} $$ 当t趋于0时，$\\bar{u}_t$趋于$\\frac{u_1+u_2}{2}$ ","date":"2023-10-08","objectID":"/heatmethod/:2:1","tags":null,"title":"Heat Method for Geodesic","uri":"/heatmethod/"},{"categories":null,"content":"Connection Laplacian ","date":"2023-10-08","objectID":"/heatmethod/:2:2","tags":null,"title":"Heat Method for Geodesic","uri":"/heatmethod/"},{"categories":null,"content":"Vector Heat Method的并行分析 ","date":"2023-10-08","objectID":"/heatmethod/:2:3","tags":null,"title":"Heat Method for Geodesic","uri":"/heatmethod/"},{"categories":null,"content":"拓展 流形M的选择，向量空间的选择，流形上平行的定义 例如：对于向量空间$V\\in R$，向量的平行传输就变为了scalar interpolation differential 1-forms，计算切丛 symmetric direction fields（对称方向场）向量场在每个点上的向量与通过该点的某条对称轴上的向量具有相同的方向 different connection ","date":"2023-10-08","objectID":"/heatmethod/:2:4","tags":null,"title":"Heat Method for Geodesic","uri":"/heatmethod/"},{"categories":null,"content":"application 自由边界问题中推断scalar velocity和vector velocity（向量外推） logmap 径向向量场$R$ 平行向量场$H$ Karcher Means and Geometric Medianss ","date":"2023-10-08","objectID":"/heatmethod/:2:5","tags":null,"title":"Heat Method for Geodesic","uri":"/heatmethod/"},{"categories":null,"content":"fem概览 ","date":"2023-07-13","objectID":"/fem/:0:0","tags":null,"title":"FEM","uri":"/fem/"},{"categories":null,"content":"流程 1.获得微分方程 2.定义边界或者约束条件 3.将微分形式的控制方程转换为其等效积分 4.对计算单元刚度矩阵 5.单元刚度矩阵的组装 6.矩阵求解 ","date":"2023-07-13","objectID":"/fem/:1:0","tags":null,"title":"FEM","uri":"/fem/"},{"categories":null,"content":"等效变换 控制方程（微分形式）-\u003e 等效积分 -\u003e 等效积分的弱形式 变分形式推导 ","date":"2023-07-13","objectID":"/fem/:2:0","tags":null,"title":"FEM","uri":"/fem/"},{"categories":null,"content":"加权余量 给定微分方程 $$A(u) = 0$$ $$B(u) = 0$$ 能量泛函推导： $$A(u) = L(u) + f$$ $$\\int_{\\Omega}(L(u) + f)\\delta u \\ d\\Omega = 0$$ $$ \\begin{equation*} \\begin{split} \\int_{\\Omega}L(u)\\delta u \\ d\\Omega \u0026 = \\int_{\\Omega}\\frac{1}{2}L(u)\\delta u \\ d\\Omega + \\int_{\\Omega}\\frac{1}{2}L(u)\\delta u \\ d\\Omega \\\\ \u0026 = \\int_{\\Omega}\\frac{1}{2}L(u)\\delta u \\ d\\Omega + \\int_{\\Omega}\\frac{1}{2}L(\\delta u)u \\ d\\Omega \\\\ \u0026 = \\delta\\int_{\\Omega}\\frac{1}{2}L(u)u \\ d\\Omega \\end{split} \\end{equation*} $$ 其中A和B都是算子符号,$A(u)$为控制方程，$B(u)$为边界条件 其等效积分形式为 $$\\int wA(u)d\\Omega + \\int wB(u)d\\tau = 0$$ 当通过形函数进行近似时 $$\\tilde{u} = \\sum N_iu_i$$ $$A(\\tilde{u}) = R$$ Example: ","date":"2023-07-13","objectID":"/fem/:3:0","tags":null,"title":"FEM","uri":"/fem/"},{"categories":null,"content":"伽辽金法 用单元的形函数来代表等效积分中的权函数$w$使得残差尽可能小 $$\\int N A(\\tilde{u})d\\Omega + \\int NB(\\tilde{u})d\\tau = 0$$ ","date":"2023-07-13","objectID":"/fem/:3:1","tags":null,"title":"FEM","uri":"/fem/"},{"categories":null,"content":"其他方法 子域法，配点法，最小二乘法，力矩法 ","date":"2023-07-13","objectID":"/fem/:3:2","tags":null,"title":"FEM","uri":"/fem/"},{"categories":null,"content":"边界条件 对一个2m阶的微分方程，0到m-1阶为强制边界条件，m到2m-1为自然边界条件 强制边界条件（本质边界条件）：强加给控制方程必须满足的 自然边界条件：泛函一阶变分为零，在边界上必须满足的条件（一般在积分表达式中可以自动得到满足） 混合边界条件 ","date":"2023-07-13","objectID":"/fem/:4:0","tags":null,"title":"FEM","uri":"/fem/"},{"categories":null,"content":"Dirchlet边界条件 常微分条件下 在区间$\\left [ a,b \\right ]$,满足$y(a) = \\alpha, y(b) = \\beta$,其中$\\alpha,\\beta$为常数 偏微分条件下 $y(x) = f(x), \\forall x \\in \\partial \\Omega$,其中 $f$ 是在边界 $\\partial \\Omega$ 中定义的已知函数 Example： 机械：梁的一端保持在空间中的固定位置 热力学中：表面保持在固定温度\r流体力学：粘性流体的固液边界处，流体相对于边界具有零速度\r","date":"2023-07-13","objectID":"/fem/:4:1","tags":null,"title":"FEM","uri":"/fem/"},{"categories":null,"content":"Neumman边界条件 代求变量边界外法线的方向导数被指定 常微分条件下 在区间$\\left [ a,b \\right ]$,满足$y’(a) = \\alpha, y’(b) = \\beta$,其中$\\alpha,\\beta$为常数 偏微分条件下 Example： 热力学：热传导方程中边界绝热，内部热量无法通过边界传导到外部\r","date":"2023-07-13","objectID":"/fem/:4:2","tags":null,"title":"FEM","uri":"/fem/"},{"categories":null,"content":"Robin边界条件 ","date":"2023-07-13","objectID":"/fem/:4:3","tags":null,"title":"FEM","uri":"/fem/"},{"categories":null,"content":"施加约束 ","date":"2023-07-13","objectID":"/fem/:5:0","tags":null,"title":"FEM","uri":"/fem/"},{"categories":null,"content":"罚函数 P（比例）控制器 PD（比例微分）控制器 PID（比例积分微分）控制器 ","date":"2023-07-13","objectID":"/fem/:5:1","tags":null,"title":"FEM","uri":"/fem/"},{"categories":null,"content":"拉格朗日乘子法 ","date":"2023-07-13","objectID":"/fem/:5:2","tags":null,"title":"FEM","uri":"/fem/"},{"categories":null,"content":"函数内积 $\\int_{a}^{b}f(x)g(x)dx$记作$\\left \\langle f,g \\right \\rangle$称为函数内积 若$\\left \\langle f,g \\right \\rangle$在$\\left [ a,b \\right ]$上等于0，说明$\\left \\langle f,g \\right \\rangle$在$\\left [ a,b \\right ]$上正交 ","date":"2023-07-13","objectID":"/fem/:6:0","tags":null,"title":"FEM","uri":"/fem/"},{"categories":null,"content":"单元刚度矩阵的推导 ","date":"2023-07-13","objectID":"/fem/:7:0","tags":null,"title":"FEM","uri":"/fem/"},{"categories":null,"content":"偏微分法 ","date":"2023-07-13","objectID":"/fem/:7:1","tags":null,"title":"FEM","uri":"/fem/"},{"categories":null,"content":"变分法 ","date":"2023-07-13","objectID":"/fem/:7:2","tags":null,"title":"FEM","uri":"/fem/"},{"categories":null,"content":"静态分析中平衡方程求解 ","date":"2023-07-13","objectID":"/fem/:8:0","tags":null,"title":"FEM","uri":"/fem/"},{"categories":null,"content":"直接求解 ","date":"2023-07-13","objectID":"/fem/:8:1","tags":null,"title":"FEM","uri":"/fem/"},{"categories":null,"content":"迭代求解 Gauss-Seidel方法\r","date":"2023-07-13","objectID":"/fem/:8:2","tags":null,"title":"FEM","uri":"/fem/"},{"categories":null,"content":"非线性方程组求解 Newton-Raphson方法\rBFGS法\r载荷-位移-约束方法\r","date":"2023-07-13","objectID":"/fem/:8:3","tags":null,"title":"FEM","uri":"/fem/"},{"categories":null,"content":"动态分析中平衡方程求解 ","date":"2023-07-13","objectID":"/fem/:9:0","tags":null,"title":"FEM","uri":"/fem/"},{"categories":null,"content":"直接积分 中心差法\rHoubolt法\rNewmark法\rBathe法\r","date":"2023-07-13","objectID":"/fem/:9:1","tags":null,"title":"FEM","uri":"/fem/"},{"categories":null,"content":"模态叠加 ","date":"2023-07-13","objectID":"/fem/:9:2","tags":null,"title":"FEM","uri":"/fem/"},{"categories":null,"content":"与FVM，FDM的差别 对于FVM其权函数$w$为1 ","date":"2023-07-13","objectID":"/fem/:10:0","tags":null,"title":"FEM","uri":"/fem/"},{"categories":null,"content":"线性动态有限元 由于引入了时间坐标，因此问题变为二维$(x, t)$问题，采用部分离散的方法，即只将空间域进行离散 ","date":"2023-07-13","objectID":"/fem/:11:0","tags":null,"title":"FEM","uri":"/fem/"},{"categories":null,"content":"弹性体模拟 ","date":"2023-07-13","objectID":"/fem/:12:0","tags":null,"title":"FEM","uri":"/fem/"}]